extends layout

block content
  .content-wrapper
  .charts
    canvas#myChart
  .charts2
    canvas#myChart2
  .table-wrapper
    //iframe(src="https://clips.twitch.tv/embed?clip=AgileAmusedHamsterOpieOP", frameborder="0", allowfullscreen="true", height="378", width="620")
    //table#mapsTable
      //tr
        //th
        //th Tim
        //th Ryan
        //th Collin
        //th Sean
        //th Cal
        //th Josh
      //tr
        //td Cache
      //tr
        //td Mirage
      //tr
        //td Dust II
      //tr
        //td Inferno
      //tr
        //td Overpass
      //tr
        //td Nuke
      //tr
        //td Cobblestone
      //tr
        //td Train
  .filters-wrapper
    form(action="/shared" method='GET')
      select(name="map" multiple)
        option(value='' disabled='') Map Filter
        option(value='Cache') Cache
        option(value='Cobblestone') Cobblestone
        option(value='Dust II') Dust II
        option(value='Inferno') Inferno
        option(value='Mirage') Mirage
        option(value='Nuke') Nuke
        option(value='Overpass') Overpass
        option(value='Train') Train
      select(name="result")
        option(value='' disabled='' selected='') Results Filter
        option(value='win') Win
        option(value='loss') Loss
        option(value='draw') Draw
      input#startDate.Filter(type="date" name="startDate" value="2016-10-07")
      input#endDate.Filter(type="date" name="endDate")
      input(type="submit" action="Submit")
  .table-wrapper
    table#statsTable
      tr
        th(colspan='3')
        th.user-header(colspan='3') Tim
        th.user-header(colspan='3') Ryan
        th.user-header(colspan='3') Collin
        th.user-header(colspan='3') Sean
        th.user-header(colspan='3') Jack
        th.user-header(colspan='3') Connor
      tr
        th Date
        th Map
        th Score
        th.user-header Rating
        th ADR
        th KDA
        th.user-header Rating
        th ADR
        th KDA
        th.user-header Rating
        th ADR
        th KDA
        th.user-header Rating
        th ADR
        th KDA
        th.user-header Rating
        th ADR
        th KDA
        th.user-header Rating
        th ADR
        th KDA
      tr#averagesHeader
        th(colspan='3') Averages:
        each player in averages
          th= (player.rating/player.count).toFixed(2)
          th= (player.adr/player.count).toFixed(0)
          th= (player.kda/player.count).toFixed(2)
      each match, index in matches
        - var result = match.results
        tr(class=result+'_row')
          td #{match.formatted_date}
          td #{match.map}
          td #{match.score[0]}-#{match.score[1]}
          each user, index2 in list
            if user[index] == ''
              td
              td
              td
            else
              td= user[index].rating.toFixed(2)
              td= user[index].adr.toFixed(0)
              td= user[index].kda.toFixed(2)

  script.
    window.onload = function() {todaysDate();}

    function todaysDate() {
      var today = new Date();
      var input = document.getElementById("endDate");
      input.value = today.getFullYear() + "-" + ("0" + (today.getMonth() + 1)).slice(-2) + "-" + ("0" + today.getDate()).slice(-2);
    }

    function format(date) {
      return (date.getMonth() + 1) + "/" + date.getDate() + "/" + date.getFullYear();
    }

  script.
    var matches = !{JSON.stringify(matches)}
    var wins = !{JSON.stringify(wins)}
    var losses = !{JSON.stringify(losses)}
    var ties = !{JSON.stringify(ties)}
    var ctx = document.getElementById('myChart').getContext('2d');
    var myChart = new Chart(ctx, {
      type: 'doughnut',
      data: {
        labels: ['Wins', 'Losses', 'Ties'],
        datasets: [{
          //label: '# of Votes',
          data: [wins, losses, ties],
          backgroundColor: ['rgb(54,162,235)', 'rgb(255,99,132)', 'rgb(255,205,86)']
        }]
      },
    });

  script.
    var matches = !{JSON.stringify(matches)}
    var ctx2 = document.getElementById('myChart2').getContext('2d');
    var dates = [];
    var players = {"Tim":[], "Ryan":[], "Collin":[], "Sean":[], "Jack":[], "Connor":[]};
    for(var i = matches.length-1; i >= 0; i--){
      var date = new Date(matches[i].date);
      dates.push((date.getMonth()+1) + "/" + date.getDate() + "/" + date.getFullYear());
      for(player in players){
        if(!(matches[i].players.includes(player))){
          players[player].push(null);
        }
        for(match_player in matches[i].players){
          if(player == matches[i].players[match_player]){
            players[matches[i].players[match_player]].push(matches[i].stats_instances[match_player].rating);
          }
        }
      }
    }

    var myChart2 = new Chart(ctx2, {
      "type": "line",
      "data": {
        "labels": dates,
        "datasets":[
          {"label": "Tim", "data": players["Tim"],"fill":false,"borderColor":"rgb(75,192,192)", "spanGaps": true},
          {"label": "Ryan", "data": players["Ryan"],"fill":false, "borderColor": "rgb(252, 186, 3)", "spanGaps": true},
          {"label": "Collin", "data": players["Collin"],"fill":false, "borderColor": "rgb(252, 3, 20)", "spanGaps": true},
          {"label": "Sean", "data": players["Sean"],"fill":false, "borderColor": "rgb(11, 3, 252)", "spanGaps": true},
          {"label": "Jack", "data": players["Jack"],"fill":false, "borderColor": "rgb(252, 3, 186)", "spanGaps": true},
          {"label": "Connor", "data": players["Connor"],"fill":false, "borderColor": "rgb(49, 252, 3)", "spanGaps": true}
        ],
      },
      "options":{
        elements: {
          line: {
              tension: 0
          }
        }
      }
    });
